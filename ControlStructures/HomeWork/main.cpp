/*
Задание 1

	 Пользователь вводит число, а программа говорит,
 введенное число Палиндром, или нет.
*/
#include <iostream>
using namespace std;

void main()
{
	setlocale(LC_ALL, "Russian");
	cout << pow(2, -3) << endl;
	system("PAUSE");
	/*
	Переменная для числа от пользователя.
	И переменная для выполнения действий над числом пользователя
	безе перезаписи его числа (временная переменная помойка).
	*/
	long long user_digit, digit_to_using;
	int digit_order = 1; //Количество порядков. Даже ноль цифра первого порядка. Поэтому предсказываем, что пользователь всё же ввел число...
	int i = 0; //Как всегда для циклов, счетчик количества выполнений...

	long long ten_to_the_power = 1; //Дополнительная переменная для хранения Десяти в степени порядка. Используется для выделения левой цифры числа.

	int left_digit, right_digit; //Переменные для хранения левой цыфры и правой.

	bool may_by_palindrome = false; //Переменная предсказатель! Не доверяем пользователю. Втыкаем флаг 'НЕ ПАЛИНДРОМ'.

	system("cls");

	cout << "\t =========+=========+=========+=========+=========+========= \n";
	cout << "\t|                                                           |\n";
	cout << "\t|                     ЧИСЛОВОЙ ПАЛИНДРОМ                    |\n";
	cout << "\t|                                                           |\n";
	cout << "\t|     Палиндром, перевертень — число, буквосочетание, слово |\n";
	cout << "\t| или текст, одинаково читающееся в обоих направлениях.     |\n";
	cout << "\t|                                                           |\n";
	cout << "\t|     Программа определчяет, является ли введенное вами     |\n";
	cout << "\t| число палиндромом.                                        |\n";
	cout << "\t|                                                           |\n";
	cout << "\t|               для завершения нажмите CTRL + C             |\n";
	cout << "\t|                                                           |\n";
	cout << "\t =========+=========+=========+=========+=========+========= \n";
	cout << endl;
	cout << "\t Введите число: "; cin >> user_digit;
	cout << endl;

	// Если Юзверь введёт символ программа зависнит на несколько перезапусков... Слабое место!

	digit_to_using = user_digit; //Поместить число пользователя во времянку...

	while (digit_to_using /= 10)
	{
		digit_order++; //
		ten_to_the_power *= 10; //Сразу возводим десять в степень... Для определния конечного порядка введённого числа.
	}; //Цикл для определения количества цифр во введённом числе от пользователя.

	digit_to_using = user_digit; //Возвращаем во временную переменную число пользователя.

	if (user_digit >= 0) //Только с неотрицаельными числами.
	{
		if (digit_order == 1) //Если введено число первого порядка
		{
			may_by_palindrome = true; //Число однозначно палиндром. Переменная предсказатель получает значение истина.
		}
		else //Пользователь смог нас заинтересовать и ввел многозначное, не отрицательное число! Он молодец. Будем определять палиндром его число или нет!
		{
			//Определяем количество итераций 'магического' цикла.
			//Делим общее количество цифр пополам.
			//Ведь по условиям задачи нам нужно сравнить левую и правую часть.
			//Если нечетное количество цифр, не страшно. Средняя цифра будет осью симетрии.
			//Нет смысла её с чем-то сравнивать. И это действие поможет нам исключить ненужную итерацию нашего будущего цикла.
			i = digit_order / 2;

			//МАГИЯ определения палиндрома...
			do //Так как пользователь нас смог заинтересовать, то хотябы одно сравнение выполнить нужно в любом случае...
			{
				left_digit = digit_to_using / ten_to_the_power; //Выделяем левую цифру
				right_digit = digit_to_using % 10; //Выделяем правую цифру

				if (left_digit == right_digit) //Если левая цифра равна правой, возможно введёно число палиндром
				{
					may_by_palindrome = true; //При первом успехе поднимаем флаг 'ПАЛИНДРОМ' )))
				}
				else 
				{
					may_by_palindrome = false; //Ожидания не оправдались ((( Подсунули число не палиндром... Поднимаем флаг 'НЕ ПАЛИНДРОМ'
				}

				digit_to_using -= left_digit * ten_to_the_power; //Убрали левую цифру
				digit_to_using /= 10; //Убрали правую цифру

				ten_to_the_power /= 100; //Убрали два порядка из сравнения

			} while (may_by_palindrome && --i); //Пока: поднят флаг 'Палиндром' и не кончились цифры для сравнения выполнить цикл ещё раз.
		}
	}
	//Математика закончилась.
	//Выводим результаты на экран.
	if (may_by_palindrome)
	{
		cout << "\t =========+=========+=========+=========+=========+========= \n";
		cout << "\t|                                                           |\n";
		cout << "\t|                 Палиндром, перевертень!!!                 |\n";
		cout << "\t|                                                           |\n";
		cout << "\t                   " << digit_order << " -ого порядка.\n";
		cout << "\t|                                                           |\n";
		cout << "\t =========+=========+=========+=========+=========+========= \n";
	}
	else if (user_digit < 0)
	{
		cout << "\t =========+=========+=========+=========+=========+========= \n";
		cout << "\t|                                                           |\n";
		cout << "\t|                    НЕ ПАЛИНДРОМ :(:(:(                    |\n";
		cout << "\t|                                                           |\n";
		cout << "\t|     Отрицательное число, не может быть полиндромом, так   |\n";
		cout << "\t| как есть знак 'минус'!!!                                  |\n";
		cout << "\t|                                                           |\n";
		cout << "\t =========+=========+=========+=========+=========+========= \n";
		//Отрицательняе числа не могут быть палиндромом, так как есть знак "минус"
	}
	else
	{
		cout << "\t =========+=========+=========+=========+=========+========= \n";
		cout << "\t|                                                           |\n";
		cout << "\t|                    НЕ ПАЛИНДРОМ :(:(:(                    |\n";
		cout << "\t|                                                           |\n";
		cout << "\t =========+=========+=========+=========+=========+========= \n";
	}

	system("pause");
	main();
}

//Исполнитель
/*
-----------------------------------------------------
|													|
|	"Компьютерная академия ШАГ"						|
|	Курс: БД011										|
|	Предмет: Основы програмирования на языке C++	|
|													|
|	Исполнитель: Курицын Алексей					|
|	Преподаватель: Ковтун Олег						|
|													|
|	Екатеринбург - 2020								|
|													|
-----------------------------------------------------
*/