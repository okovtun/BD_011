#include <iostream>
#include <stdlib.h>
#include <ctime>
#include <Windows.h>
using namespace std;
using std::cin;
using std::cout;
using std::endl;

/*
TODO:
1. Массив, заполненный случайными числами, отсортировать в порядке возрастания;
2. Массив из 10-ти элементов заполнить уникальными случайными числами, от 0 до 10;
*/

//#define SORTING_RAND //Пузырьковая сортировка по возрастанию
#define UNIQ_RAND //Генерация уникального массива

void main()
{
	setlocale(LC_ALL, "Russian");

#ifdef SORTING_RAND
	/*	Задача №1
		Массив, заполненный случайными числами, отсортировать в порядке возрастания
	*/
	const int N = 10; // Размер массива.
	unsigned int arr[N] = {};
	int sum = 0;
	for (int i = 0; i < N; i++)
	{
		cout << i << "\t";
		sum += i;
		cout << sum << endl;
	}
	srand(time(NULL)); // Установавем начальную точку генерирования последовательности. Используем функцию time(NULL)

	for (int i = 0; i < N; i++) //Заполняем массив
	{
		arr[i] = rand()%10;
	}

	cout << "Массив из " << N << " случайных чисел:";
	cout << endl;
	for (int i = 0; i < N; i++)
	{
		cout << arr[i] << "\t";
		if (i % 15 == 0 && i != 0) cout << endl; //Перенос строки каждые 15 строчек.
	}
	cout << endl << endl;
	///////////////////////////////////////////////////////////////////////////
	//Сортировка массива по возрастанию.
	//Методом "пузырька"
	int iterations = 0;
	int exchanges = 0;
	for (int i = 0; i < N - 1; i++)
	{//Количество элементов массива, минус одна итерация для исключения крайнего сравнения
		for (int j = 0; j < N - i; j++)
		{//Каждый новый цикл короче на одну итерацию.
			if (arr[j] > arr[j + 1])
			{//Если левое значение больше правого, то меняем их местами.
				arr[j] ^= arr[j + 1]; //Шифруем левый по маске правого
				arr[j + 1] ^= arr[j]; //В правый элемент расшифровываем левый, применяя начальное значение как ключ. Левый >переходит в> Правый. 
				arr[j] ^= arr[j + 1]; //В левый элемент расшифровываем правый, применяя начальное значение как ключ. Правый >переходит в> Левый.
				exchanges++;
			}
			iterations++;
		}
	}
	cout << "Массив отсортирован за " << iterations << " итераций,\n";
	cout << "при этом выполнено " << exchanges << " обменов элементов\n";
	///////////////////////////////////////////////////////////////////////////
	//Вывод сортированного по возрастанию массива
	cout << "Сортированный по возрастанию массив из " << N << " случайных чисел:";
	cout << endl;
	for (int i = 0; i < N; i++)
	{
		cout << arr[i] << "\t";
		if (i % 15 == 0 && i != 0) cout << endl; //Перенос строки каждые 15 строчек.
	}
	cout << endl << endl;
#endif // SORTING_RAND

#ifdef UNIQ_RAND
	/*	Задача №2
		Массив из 10-ти элементов заполнить уникальными случайными числами, от 0 до 10
	*/

	const int N = 10;
	int arr[N] = {};
	bool uniq; //Флаг - Значение уникально.

	const int WAIT = 50; //Задержка в мсек...

	unsigned int start_time = clock(); // начальное время

	//srand(time(NULL)); // Установавем начальную точку генерирования последовательности. Используем функцию time(NULL)
	for (int i = 0; i < N; i++)
	{
		system("CLS");
		cout << endl;
		cout << "Генерация массива... " << i * 100 / N << "%";
		cout << endl;
		//Sleep(WAIT);

		do
		{
			arr[i] = rand() % N;
			uniq = true; //Предпологаем, значение уникальное "true"
			//if (i > 0)
			{
				for (int j = 0; j < i; j++)
				{
					if (arr[i] == arr[j])
					{
						uniq = false; //Обнаружен двойник, значение уникально "false"
					}
				}
			}
		} while (!uniq); //Повторять, пока значение не будет уникальным.
	}

	system("CLS");
	cout << endl;
	cout << "Генерация массива... " << 100 << "%";
	cout << endl << endl;

	unsigned int finish_time = clock();
	cout << "Массив сгенерирован за " << ((finish_time - start_time) / 1000.0) << " сек.";
	cout << endl << endl;

	//Вывод сгенерированного, уникального массива
	cout << "Уникально сгенерированный массив из " << N << " чисел от 0 до " << N - 1 << ":";
	cout << endl;
	for (int i = 0; i < N; i++)
	{
		cout << arr[i] << "   ";
		if (i % 15 == 0 && i != 0) cout << endl; //Перенос строки каждые 15 строчек.
	}
	cout << endl << endl;

#endif // UNIQ_RAND

}

//Исполнитель
/*
-----------------------------------------------------
|													|
|	"Компьютерная академия ШАГ"						|
|	Курс: БД011										|
|	Предмет: Основы програмирования на языке C++	|
|													|
|	Исполнитель: Курицын Алексей					|
|	Преподаватель: Ковтун Олег						|
|													|
|	Екатеринбург - 2020								|
|													|
-----------------------------------------------------
*/